#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–∏—Å–∫–æ—Ç–µ–∫–µ.
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ/–∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏—Å–∫–æ—Ç–µ–∫–∏ –∏ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–≤—É–∫–∞.
"""

import requests
import json
import os
import sys
from datetime import datetime


def get_exe_dir():
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è exe —Ñ–∞–π–ª"""
    if getattr(sys, 'frozen', False):
        # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ exe
        return os.path.dirname(sys.executable)
    else:
        # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
        return os.path.dirname(os.path.abspath(__file__))


class TelegramNotifier:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram"""
    
    def __init__(self, config_file=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
        
        Args:
            config_file (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        """
        if config_file is None:
            config_file = os.path.join(get_exe_dir(), 'scheduler_config.json')
        
        self.config_file = config_file
        self.bot_token = None
        self.chat_ids = []
        self.enabled = False
        self.notifications_enabled = True  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã
        
        self.load_config()
    
    def load_config(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            if os.path.exists(self.config_file):
                with open(self.config_file, 'r', encoding='utf-8') as f:
                    config = json.load(f)
                    
                self.bot_token = config.get('telegram_bot_token', '')
                self.chat_ids = config.get('telegram_chat_ids', [])
                self.notifications_enabled = config.get('telegram_notifications_enabled', True)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ –ø—É—Å—Ç–æ–π –∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω chat_id
                if self.bot_token and self.chat_ids:
                    self.enabled = True
                    status = "–≤–∫–ª—é—á–µ–Ω—ã" if self.notifications_enabled else "–æ—Ç–∫–ª—é—á–µ–Ω—ã"
                    print(f"[Telegram Bot] –ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {len(self.chat_ids)}. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è {status}")
                else:
                    self.enabled = False
                    if not self.bot_token:
                        print("[Telegram Bot] –ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: —Ç–æ–∫–µ–Ω –Ω–µ –∑–∞–¥–∞–Ω")
                    elif not self.chat_ids:
                        print("[Telegram Bot] –ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (chat_ids –ø—É—Å—Ç)")
            else:
                print(f"[Telegram Bot] –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.config_file}")
                self.enabled = False
                
        except Exception as e:
            print(f"[Telegram Bot] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            self.enabled = False
    
    def send_message(self, message, parse_mode='HTML'):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        
        Args:
            message (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            parse_mode (str): –†–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞ (HTML, Markdown)
            
        Returns:
            bool: True –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é
        """
        if not self.enabled:
            return False
        
        if not self.notifications_enabled:
            print("[Telegram Bot] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ –∫–æ–Ω—Ñ–∏–≥–µ")
            return False
        
        success = False
        api_url = f"https://api.telegram.org/bot{self.bot_token}/sendMessage"
        
        for chat_id in self.chat_ids:
            try:
                payload = {
                    'chat_id': chat_id,
                    'text': message,
                    'parse_mode': parse_mode
                }
                
                response = requests.post(api_url, json=payload, timeout=10)
                
                if response.status_code == 200:
                    success = True
                    print(f"[Telegram Bot] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
                else:
                    print(f"[Telegram Bot] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç {chat_id}: {response.status_code} - {response.text}")
                    
            except Exception as e:
                print(f"[Telegram Bot] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id}: {e}")
        
        return success
    
    def notify_disco_started(self):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –¥–∏—Å–∫–æ—Ç–µ–∫–∏"""
        now = datetime.now()
        message = (
            f"üéâ <b>–î–∏—Å–∫–æ—Ç–µ–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!</b>\n\n"
            f"‚è∞ –í—Ä–µ–º—è: {now.strftime('%d.%m.%Y %H:%M')}\n"
            f"üéµ –ú—É–∑—ã–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞"
        )
        return self.send_message(message)
    
    def notify_disco_stopped(self):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏—Å–∫–æ—Ç–µ–∫–∏"""
        now = datetime.now()
        message = (
            f"üõë <b>–î–∏—Å–∫–æ—Ç–µ–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>\n\n"
            f"‚è∞ –í—Ä–µ–º—è: {now.strftime('%d.%m.%Y %H:%M')}\n"
            f"üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!"
        )
        return self.send_message(message)
    
    def notify_music_stopped(self, silence_time):
        """
        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –º—É–∑—ã–∫–∏ (—Ç–∏—à–∏–Ω–∞)
        
        Args:
            silence_time (float): –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∏—à–∏–Ω—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        """
        now = datetime.now()
        message = (
            f"‚ö†Ô∏è <b>–ú—É–∑—ã–∫–∞ –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ –∏–≥—Ä–∞—Ç—å!</b>\n\n"
            f"‚è∞ –í—Ä–µ–º—è: {now.strftime('%d.%m.%Y %H:%M')}\n"
            f"üîá –¢–∏—à–∏–Ω–∞: {silence_time:.0f} —Å–µ–∫—É–Ω–¥\n"
        )
        return self.send_message(message)
    
    def notify_music_restored(self, silence_duration):
        """
        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –º—É–∑—ã–∫–∏
        
        Args:
            silence_duration (float): –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Ç–∏—à–∏–Ω—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        """
        now = datetime.now()
        message = (
            f"‚úÖ <b>–ú—É–∑—ã–∫–∞ –∏–≥—Ä–∞–µ—Ç</b>\n\n"
            f"‚è∞ –í—Ä–µ–º—è: {now.strftime('%d.%m.%Y %H:%M')}\n"
            f"üéµ –í—Å–µ —Ö–æ—Ä–æ—à–æ"
        )
        return self.send_message(message)
    
    def notify_server_started(self):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞"""
        now = datetime.now()
        message = (
            f"üöÄ <b>–°–µ—Ä–≤–µ—Ä –¥–∏—Å–∫–æ—Ç–µ–∫–∏ –∑–∞–ø—É—â–µ–Ω!</b>\n\n"
            f"‚è∞ –í—Ä–µ–º—è: {now.strftime('%d.%m.%Y %H:%M')}\n"
            f"üíª –°–∏—Å—Ç–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞\n"
            f"üéµ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        )
        return self.send_message(message)
    
    def add_chat_id(self, chat_id):
        """
        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ chat_id –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        
        Args:
            chat_id (int/str): ID —á–∞—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        """
        chat_id = str(chat_id)
        if chat_id not in self.chat_ids:
            self.chat_ids.append(chat_id)
            self.save_config()
            print(f"[Telegram Bot] –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫: {chat_id}")
            return True
        return False
    
    def remove_chat_id(self, chat_id):
        """
        –£–¥–∞–ª–µ–Ω–∏–µ chat_id –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        
        Args:
            chat_id (int/str): ID —á–∞—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        """
        chat_id = str(chat_id)
        if chat_id in self.chat_ids:
            self.chat_ids.remove(chat_id)
            self.save_config()
            print(f"[Telegram Bot] –£–¥–∞–ª–µ–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫: {chat_id}")
            return True
        return False
    
    def save_config(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª"""
        try:
            if os.path.exists(self.config_file):
                with open(self.config_file, 'r', encoding='utf-8') as f:
                    config = json.load(f)
                
                config['telegram_bot_token'] = self.bot_token
                config['telegram_chat_ids'] = self.chat_ids
                config['telegram_notifications_enabled'] = self.notifications_enabled
                
                with open(self.config_file, 'w', encoding='utf-8') as f:
                    json.dump(config, f, indent=2, ensure_ascii=False)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å enabled
                self.enabled = bool(self.bot_token and self.chat_ids)
                
        except Exception as e:
            print(f"[Telegram Bot] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    
    def enable_notifications(self):
        """–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        if not self.enabled:
            print("[Telegram Bot] –ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
            return False
        
        self.notifications_enabled = True
        self.save_config()
        print("[Telegram Bot] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã")
        return True
    
    def disable_notifications(self):
        """–û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        if not self.enabled:
            print("[Telegram Bot] –ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
            return False
        
        self.notifications_enabled = False
        self.save_config()
        print("[Telegram Bot] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã")
        return True
    
    def toggle_notifications(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        if self.notifications_enabled:
            return self.disable_notifications()
        else:
            return self.enable_notifications()
    
    def get_notifications_status(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        if not self.enabled:
            return "–ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
        return "–≤–∫–ª—é—á–µ–Ω—ã" if self.notifications_enabled else "–æ—Ç–∫–ª—é—á–µ–Ω—ã"


def main():
    """–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=== –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–∏—Å–∫–æ—Ç–µ–∫–µ ===\n")
    
    notifier = TelegramNotifier()
    
    if not notifier.enabled:
        print("‚ùå –ë–æ—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        print("–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ scheduler_config.json:")
        print('  "telegram_bot_token": "–≤–∞—à_—Ç–æ–∫–µ–Ω",')
        print('  "telegram_chat_ids": ["–≤–∞—à_chat_id"]')
        return
    
    print("‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
    print(f"–¢–æ–∫–µ–Ω: {notifier.bot_token[:10]}...")
    print(f"–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {notifier.chat_ids}\n")
    
    # –ú–µ–Ω—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    while True:
        print("\n--- –ú–µ–Ω—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---")
        print("1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ '–î–∏—Å–∫–æ—Ç–µ–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å'")
        print("2. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ '–î–∏—Å–∫–æ—Ç–µ–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞'")
        print("3. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ '–ú—É–∑—ã–∫–∞ –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ –∏–≥—Ä–∞—Ç—å'")
        print("4. –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ '–ú—É–∑—ã–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'")
        print("5. –î–æ–±–∞–≤–∏—Ç—å chat_id")
        print("6. –£–¥–∞–ª–∏—Ç—å chat_id")
        print("7. –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ chat_ids")
        print("8. –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        print("9. –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        print("10. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        print("11. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
        print("0. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        
        if choice == '1':
            if notifier.notify_disco_started():
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
                
        elif choice == '2':
            if notifier.notify_disco_stopped():
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
                
        elif choice == '3':
            silence_time = input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∏—à–∏–Ω—ã (—Å–µ–∫—É–Ω–¥, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20): ").strip()
            silence_time = float(silence_time) if silence_time else 20.0
            if notifier.notify_music_stopped(silence_time):
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
                
        elif choice == '4':
            silence_duration = input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∏—à–∏–Ω—ã (—Å–µ–∫—É–Ω–¥, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30): ").strip()
            silence_duration = float(silence_duration) if silence_duration else 30.0
            if notifier.notify_music_restored(silence_duration):
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
                
        elif choice == '5':
            chat_id = input("–í–≤–µ–¥–∏—Ç–µ chat_id –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ").strip()
            if chat_id:
                if notifier.add_chat_id(chat_id):
                    print(f"‚úÖ Chat ID {chat_id} –¥–æ–±–∞–≤–ª–µ–Ω")
                else:
                    print(f"‚ö†Ô∏è Chat ID {chat_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    
        elif choice == '6':
            chat_id = input("–í–≤–µ–¥–∏—Ç–µ chat_id –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
            if chat_id:
                if notifier.remove_chat_id(chat_id):
                    print(f"‚úÖ Chat ID {chat_id} —É–¥–∞–ª–µ–Ω")
                else:
                    print(f"‚ö†Ô∏è Chat ID {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
        elif choice == '7':
            print(f"\n–¢–µ–∫—É—â–∏–µ chat_ids: {notifier.chat_ids}")
            
        elif choice == '8':
            if notifier.enable_notifications():
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                
        elif choice == '9':
            if notifier.disable_notifications():
                print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                
        elif choice == '10':
            if notifier.toggle_notifications():
                status = notifier.get_notifications_status()
                print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å {status}")
                
        elif choice == '11':
            status = notifier.get_notifications_status()
            print(f"\n–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è {status}")
            
        elif choice == '0':
            print("–í—ã—Ö–æ–¥...")
            break
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")


if __name__ == '__main__':
    main()

